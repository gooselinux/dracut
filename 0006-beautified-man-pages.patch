From d54a0e5ae8772d8b4acad1e2fb0a9c2887838730 Mon Sep 17 00:00:00 2001
From: Harald Hoyer <harald@redhat.com>
Date: Tue, 2 Feb 2010 15:11:59 +0100
Subject: [PATCH 06/23] beautified man pages

---
 dracut.8      |  311 +++++++++++++++++++++++++++++++--------------------------
 dracut.conf.5 |   28 +++---
 2 files changed, 182 insertions(+), 157 deletions(-)

diff --git a/dracut.8 b/dracut.8
index 563d0d1..1abc690 100644
--- a/dracut.8
+++ b/dracut.8
@@ -10,7 +10,7 @@ creates an initial image used by the kernel for
 preloading the block device modules (such as IDE, SCSI or RAID)
 which are needed to access the root filesystem.
 
-.SH OPTIONS
+.SS Options
 .TP
 .BR \-f ", " \-\-force
 overwrite existing initramfs file.
@@ -28,12 +28,14 @@ omit a space-separated list of dracut modules.
 add a space-separated list of dracut modules.
 .TP
 .BR \-d ", " \-\-drivers " \fILIST\fR"
-specify a space-separated list of kernel modules to exclusively include in the initramfs.
+specify a space-separated list of kernel modules to exclusively include#
+in the initramfs.
 .BR \-\-add-drivers " \fILIST\fR"
 specify a space-separated list of kernel modules to add to the initramfs.
 .TP
 .BR \-\-filesystems " \fILIST\fR"
-specify a space-separated list of kernel filesystem modules to exclusively include in the generic initramfs.
+specify a space-separated list of kernel filesystem modules to exclusively 
+include in the generic initramfs.
 .TP
 .BR \-k ", " \-\-kmoddir " \fI{DIR}\fR   
 specify the directory, where to look for kernel modules
@@ -90,7 +92,7 @@ target directory in the final initramfs.
 .BR \-I ", " \-\-install " \fILIST\fR"
 install the space separated list of files into the initramfs.
 
-.SH KERNEL COMMAND LINE
+.SH "KERNEL COMMAND LINE"
 The root filesystem used by the kernel is specified in the boot configuration
 file, as always. The traditional \fBroot=/dev/hda1\fR style device 
 specification is allowed. If a label is used, as in \fBroot=LABEL=rootPart\fR
@@ -99,19 +101,20 @@ with the appropriate label, and mount that device as the root filesystem.
 \fBroot=UUID=uuidnumber\fR will mount the partition with that UUID as the 
 root filesystem.
 
-.SH Standard
+.SS Standard
 .TP
-.B init=<path to real init>
+.BR init= "<path to real init>"
 .TP
-.B root=<path to blockdevice>
-specify blockdevice to use as root filesystem.
-e.g. \fI/dev/sda1\fR
-e.g. \fI/dev/disk/by-path/pci-0000:00:1f.1-scsi-0:0:1:0-part1\fR
+.BR root= "<path to blockdevice>"
+specify blockdevice to use as root filesystem. 
+ e.g.
+  root=/dev/sda1
+  root=/dev/disk/by-path/pci-0000:00:1f.1-scsi-0:0:1:0-part1
 .TP
-.B rootfstype=<filesystem type>
-"auto" if not specified, e.g. \fIrootfstype=ext3\fR
+.BR rootfstype= "<filesystem type>"
+"auto" if not specified, e.g. rootfstype=ext3
 .TP
-.B rootflags=<mount options>
+.BR rootflags "=<mount options>"
 specify additional mount options for the root filesystem. If not set, /etc/fstab
 of the real root will be parsed for special mount options and mounted 
 accordingly.
@@ -120,140 +123,180 @@ accordingly.
 do not honor special mount options for the root filesystem found in 
 /etc/fstab of the real root.
 
-.SH I18N
+.SS Misc
+.TP
+.BR rdblacklist= <drivername>
+do not load kernel module <drivername>
+.TP
+.BR rdloaddriver= <drivername>
+force loading kernel module <drivername>
+
+.SS Debug
+.TP
+.B rdinfo
+print informational output though "quiet" is set
+.TP
+.B rdshell
+allow dropping to a shell, if root mounting fails
+.TP
+.B rdinitdebug
+set -x for the dracut shell and logs to dmesg, console and /init.log
+.TP
+.B rdbreak
+drop to a shell at the end
+.TP
 .ad l
-e.g. LANG=en_US.UTF-8 SYSFONT=latarcyrheb-sun16 KEYTABLE=de-latin1-nodeadkeys
+.BR rdbreak= \%{cmdline\:|pre-udev\:|pre-trigger\:|initqueue\:|pre-mount\:|mount\:|pre-pivot}
 .ad
+drop to a shell on defined breakpoint
+.TP
+.B rdudevinfo
+set udev to loglevel info
+.TP
+.B rdudevdebug
+set udev to loglevel debug
+.TP
+.B rdnetdebug
+debug network scripts in dracut. Output is written to /tmp/
+
+.SS I18N
+ e.g.
+  LANG=en_US.UTF-8
+  SYSFONT=latarcyrheb-sun16
+  KEYTABLE=de-latin1-nodeadkeys
 .TP
-.B KEYBOARDTYPE=sun|pc
+.BR KEYBOARDTYPE= sun|pc
 will be written to /etc/sysconfig/keyboard in the initramfs
 .TP
-.B KEYTABLE=<keytable filename>
+.BR KEYTABLE= "<keytable filename>"
 will be written to /etc/sysconfig/keyboard in the initramfs
 .TP
-.B SYSFONT= Console font
+.BR SYSFONT= "Console font"
 will be written to /etc/sysconfig/i18n in the initramfs
 .TP
-.B SYSFONTACM= Unicode font map
+.BR SYSFONTACM= "Unicode font map"
 will be written to /etc/sysconfig/i18n in the initramfs
 .TP
-.B UNIMAP= Unicode font map
+.BR UNIMAP= "Unicode font map"
 will be written to /etc/sysconfig/i18n in the initramfs
 .TP
-.B LANG=<locale>
+.BR LANG= <locale>
 will be written to /etc/sysconfig/i18n in the initramfs
 
-.SH LVM
+.SS LVM
 .TP
-.B rd_NO_LVM
+.BR rd_NO_LVM
 disable LVM detection
 .TP
-.B rd_LVM_VG=<volume group name>
+.BR rd_LVM_VG= "<volume group name>"
 only activate the volume groups with the given name
 rd_LVM_VG can be specified multiple times on the kernel command line.
 .TP
-.B rd_LVM_LV=<logical volume name>
+.BR rd_LVM_LV= "<logical volume name>"
 only activate the volume groups with the given name
 rd_LVM_LV can be specified multiple times on the kernel command line.
 .TP
-.B rd_NO_LVMCONF
+.BR rd_NO_LVMCONF
 remove any /etc/lvm/lvm.conf, which may exist in the initramfs
 
-.SH crypto LUKS
+.SS "crypto LUKS"
 .TP
-.B rd_NO_LUKS
+.BR rd_NO_LUKS
 disable crypto LUKS detection
 .TP
-.B rd_LUKS_UUID=<luks uuid>
+.BR rd_LUKS_UUID= "<luks uuid>"
 only activate the LUKS partitions with the given UUID
 Any "luks-" of the LUKS UUID is removed before comparing to <luks uuid>.
 The comparisons also matches, if <luks uuid> is only the beginning of the 
 LUKS UUID, so you don't have to specify the full UUID.
-.B rd_NO_CRYPTTAB
+.BR rd_NO_CRYPTTAB
 do not check if LUKS partition is in /etc/crypttab
 
-.SH MD
+.SS MD
 .TP
-.B rd_NO_MD
+.BR rd_NO_MD
 disable MD RAID detection
 .TP
-.B rd_NO_MDIMSM
+.BR rd_NO_MDIMSM
 no MD RAID for imsm/isw raids, use dmraid instead
 .TP
-.B rd_NO_MDADMCONF
+.BR rd_NO_MDADMCONF
 ignore mdadm.conf included in initramfs
 .TP
-.B rd_MD_UUID=<md uuid>
+.BR rd_MD_UUID= "<md uuid>"
 only activate the raid sets with the given UUID
 
-.SH DMRAID
+.SS DMRAID
 .TP
-.B rd_NO_DM
+.BR rd_NO_DM
 disable DM RAID detection
 .TP
-.B rd_DM_UUID=<dmraid uuid>
+.BR rd_DM_UUID= "<dmraid uuid>"
 only activate the raid sets with the given UUID
 
-.SH DASD
+.SS Network
 .TP
-.B rd_DASD_MOD=....
-same syntax as the kernel module parameter (s390 only)
+.BR ip= {dhcp|on|any|auto6}
+dhcp|on|any: get ip from dhcp server from all interfaces. If root=dhcp, 
+loop sequentially through all interfaces (eth0, eth1, ...) and use the first 
+with a valid DHCP root-path.
 
+auto6: do ipv6 autoconfiguration
 .TP
-.B rd_DASD=<dasd adaptor device bus ID>[,readonly=X][,use_diag=X][,erplog=X][,failfast=X]
-activate DASD device with the given adaptor device bus ID and setting the sysfs attributes
-to the specified values
+.BR ip= <interface>:{dhcp|on|any|auto6}
+dhcp|on|any: get ip from dhcp server on a specific interface
 
-.SH ZFCP
+auto6: do ipv6 autoconfiguration
 .TP
-.B rd_ZFCP=<zfcp adaptor device bus ID>,<WWPN>,<FCPLUN>
-rd_ZFCP can be specified multiple times on the kernel command line.
-
-example: rd_ZFCP=0.0.4000,0x5005076300C213e9,0x5022000000000000 
+.ad l
+.BR ip= "\%<client-IP>\::[<server-id>]\::<gateway-IP>\::<netmask>\::<client\%hostname>\::<interface>\::{none|off}"
+.ad
+explicit network configuration
 .TP
-.B rd_NO_ZFCPCONF
-ignore zfcp.conf included in the initramfs
-
-.SH CCW
+.BR ifname= <interface>:<MAC>
+Assign network device name <interface> (ie eth0) to the NIC with MAC <MAC>.
+Note letters in the MAC-address must be lowercase!
+Note that if you use this option you \fBmust\fR specify an ifname= argument
+for all interfaces used in ip= or fcoe= arguments
 .TP
-.B rd_CCW=<nettype>,<subchannels>,<options>
-rd_CCW can be specified multiple times on the kernel command line. Examples:
-    rd_CCW=qeth,0.0.0600,0.0.0601,0.0.0602,layer2=1,portname=foo
-    rd_CCW=ctc,0.0.0600,0.0.0601,0.0.0602,protocol=bar
-.SH DHCP
+.BR bootdev= <interface>
+specify network interface to use routing and netroot information from. 
+Required if multiple ip= lines are used.
 .TP
-.B root=dhcp
-get IP from dhcp server, root-path option from dhcp specifies root location
+.BR nameserver= "<IP> [nameserver=<IP> ...]"
+specify nameserver(s) to use
 
-.SH NFS
+.SS NFS
 .TP
-.B root=[<server-ip>:]<root-dir>[:<nfs-options>]
+.BR root= "[<server-ip>:]<root-dir>[:<nfs-options>]"
 mount nfs share from <server-ip>:/<root-dir>, if no server-ip is given,
 use dhcp next_server. 
-NFS options can be appended with the prefix "." or ","
+NFS options can be appended with the prefix ":" or "," and are seperated by ",".
 .TP
-.B root=nfs:[<server-ip>:]<root-dir>[:<nfs-options>] 
+.BR root= "nfs:[<server-ip>:]<root-dir>[:<nfs-options>]"
 .TP
-.B root=nfs4:[<server-ip>:]<root-dir>[:<nfs-options>]
+.BR root= "nfs4:[<server-ip>:]<root-dir>[:<nfs-options>]"
 .TP
-.B root=dhcp 
+.BR root= dhcp 
 root=dhcp alone directs initrd to look at the DHCP root-path where NFS 
 options can be specified.
     root-path=<server-ip>:<root-dir>[,<nfs-options>]
     root-path=nfs:<server-ip>:<root-dir>[,<nfs-options>]
     root-path=nfs4:<server-ip>:<root-dir>[,<nfs-options>] 
 .TP
-.B root=/dev/nfs nfsroot=[<server-ip>:]<root-dir>[,<nfs-options>]
+.BR root= /dev/nfs " nfsroot=" "[<server-ip>:]<root-dir>[,<nfs-options>]"
 \fBDeprecated!\fR kernel Documentation/filesystems/nfsroot.txt defines 
 this method.  
 This is supported by dracut but not recommended.
 .TP
-.B rd_NFS_DOMAIN=<NFSv4 domain name>
+.BR rd_NFS_DOMAIN= "<NFSv4 domain name>"
 Set the NFSv4 domain name. Will overwrite the settings in /etc/idmap.conf.
 
-.SH iSCSI
+.SS iSCSI
 .TP
-.B root=iscsi:[username:password[:reverse:password]@][<servername>]:[<protocol>]:[<port>]:[<LUN>]:<targetname>
+.ad l
+.BR root= "\%iscsi:[username:password\:[:reverse:password]@]\:[<servername>]\::[<protocol>]\::[<port>]\::[<LUN>]\::<targetname>"
+.ad
 protocol defaults to "6", LUN defaults to "0".
 
 If the "servername" field is provided by BOOTP or DHCP, then that
@@ -266,104 +309,94 @@ associated fields.
 http://tools.ietf.org/html/rfc4173
 
 .TP
-.B root=iscsi:[username:password[:reverse:password]@][<servername>]:[<protocol>]:[<port>]:[<LUN>]:<targetname>
+.ad l
+.BR root= "\%iscsi:[username:password\:[:reverse:password]@]\:[<servername>]\::[<protocol>]\::[<port>]\::[<LUN>]\::<targetname>"
+.ad
 e.g. root=iscsi:192.168.50.1::::iqn.2009-06.dracut:target0
 .TP
-.B root=??? netroot=iscsi:[username:password[:reverse:password]@][<servername>]:[<protocol>]:[<port>]:[<LUN>]:<targetname> ...
 .ad l
+.BR root= ??? " netroot=" "\%iscsi:[username:password[:reverse:password]@]\:[<servername>]\::[<protocol>]\::[<port>]\::[<LUN>]\::<targetname> ..."
+.ad
 multiple netroot options allow setting up multiple iscsi disks
-e.g. 
-   root=UUID=12424547
-   netroot=iscsi:192.168.50.1::::iqn.2009-06.dracut:target0
-   netroot=iscsi:192.168.50.1::::iqn.2009-06.dracut:target1
+.B Not yet implemented!
+ e.g. 
+  root=UUID=12424547
+  netroot=iscsi:192.168.50.1::::iqn.2009-06.dracut:target0
+  netroot=iscsi:192.168.50.1::::iqn.2009-06.dracut:target1
 
-.B not yet implemented!
-.ad
 .TP
-.B root=??? iscsi_initiator= iscsi_target_name= iscsi_target_ip= iscsi_target_port= iscsi_target_group= iscsi_username=  iscsi_password= iscsi_in_username= iscsi_in_password=
+.ad l
+.BR \%root= \%??? " \%iscsi_initiator=" \%<initiator> " \%iscsi_target_name=" "<target name>" " \%iscsi_target_ip=" "<target ip>" " \%iscsi_target_port=" "<target port>" " \%iscsi_target_group=" "<target group>" " \%iscsi_username=" "<username>" " \%iscsi_password=" <password> " \%iscsi_in_username=" "<in username>" " \%iscsi_in_password=" "<in password>"
+.ad
+manually specify all iscsistart parameter (see \fIiscsistart\ --help\fR)
+
 .TP
-.B root=??? iscsi_firmware
+.BR root= ??? " iscsi_firmware"
 will read the iscsi parameter from the BIOS firmware
 
-.SH FCoE
+.SS FCoE
 .TP
-.B netroot=fcoe:<interface|MAC>:<dcb|nodcb>
+.BR netroot= fcoe:<interface|MAC>:<dcb|nodcb>
 Try to connect to a FCoE SAN through the NIC specified by <interface> or <MAC>,
 for the second argument, currently only nodcb is supported. Note letters in
 the MAC-address must be lowercase!
 
-.SH NBD
+.SS NBD
 .TP
-.B root=nbd:<server>:<port>[:<fstype>][:<mountopts>]
+.BR root= nbd:<server>:<port>[:<fstype>][:<mountopts>]
 mount nbd share from <server>
 .TP
-.B root=dhcp 
+.BR root= dhcp 
 with dhcp root-path=nbd:<server>:<port>[:<fstype>][:<mountopts>]
-root=dhcp alone directs initrd to look at the DHCP root-path where NBD options can be specified.
-This syntax is only usable in cases where you are directly mounting the volume as the rootfs.
+root=dhcp alone directs initrd to look at the DHCP root-path where NBD 
+options can be specified.
+This syntax is only usable in cases where you are directly mounting the volume 
+as the rootfs.
 
-.SH Network
-.TP
-.B ip={dhcp|on|any}
-get ip from dhcp server from all interfaces. If root=dhcp, loop sequentially through all interfaces (eth0, eth1, ...) and use the first with a valid DHCP root-path.
+
+.SS DASD
 .TP
-.B ip=<interface>:{dhcp|on|any}
-get ip from dhcp server on a specific interface
+.BR rd_DASD_MOD= ....
+same syntax as the kernel module parameter (s390 only)
+
 .TP
 .ad l
-.B ip=<client-IP>:[<server-id>]:<gateway-IP>:<netmask>:<client\%hostname>:<interface>:{none|off}
+.BR rd_DASD= "\%<dasd adaptor device bus ID>\:[,readonly=X]\:[,use_diag=X]\:[,erplog=X]\:[,failfast=X]"
 .ad
-explicit network configuration
-.TP
-.B ifname=<interface>:<MAC>
-Assign network device name <interface> (ie eth0) to the NIC with MAC <MAC>.
-Note letters in the MAC-address must be lowercase!
-Note that if you use this option you \fBmust\fR specify an ifname= argument
-for all interfaces used in ip= or fcoe= arguments
-.TP
-.B bootdev=<interface>
-specify network interface to use routing and netroot information from. Required if multiple ip= lines are used.
+activate DASD device with the given adaptor device bus ID and setting the sysfs attributes
+to the specified values
 
-.SH Plymouth Boot Splash
+.SS ZFCP
 .TP
-.B rd_NO_PLYMOUTH
-do not start plymouth. This will not work with encrypted partitions.
+.BR rd_ZFCP= "<zfcp adaptor device bus ID>,\:<WWPN>,\:<FCPLUN>"
+rd_ZFCP can be specified multiple times on the kernel command line.
 
-.SH Misc
-.TP
-.B rdblacklist=<drivername>
-do not load kernel module <drivername>
+example: rd_ZFCP=0.0.4000,0x5005076300C213e9,0x5022000000000000 
 .TP
-.B rdloaddriver=<drivername>
-force loading kernel module <drivername>
+.BR rd_NO_ZFCPCONF
+ignore zfcp.conf included in the initramfs
 
-.SH Debug
-.TP
-.B rdinfo
-print informational output though "quiet" is set
-.TP
-.B rdshell
-allow dropping to a shell, if root mounting fails
-.TP
-.B rdinitdebug
-set -x for the dracut shell and logs to dmesg, console and /init.log
+.SS CCW
 .TP
-.B rdbreak
-drop to a shell at the end
+.BR rd_CCW= "<nettype>,<subchannels>,<options>"
+rd_CCW can be specified multiple times on the kernel command line. Examples:
+    rd_CCW=qeth,0.0.0600,0.0.0601,0.0.0602,layer2=1,portname=foo
+    rd_CCW=ctc,0.0.0600,0.0.0601,0.0.0602,protocol=bar
+
+.SS "Plymouth Boot Splash"
 .TP
-.B rdbreak={cmdline | pre-udev | pre-trigger | initqueue | pre-mount | mount | pre-pivot}
-drop to a shell on defined breakpoint
+.BR rd_NO_PLYMOUTH
+do not start plymouth. This will not work with encrypted partitions.
+
+.SH FILES
 .TP
-.B rdudevinfo
-set udev to loglevel info
+.B /var/log/dracut.log
 .TP
-.B rdudevdebug
-set udev to loglevel debug
+.B /tmp/dracut.log
+see \fBdracut.conf\fR(5)
 .TP
-.B rdnetdebug
-debug network scripts in dracut. Output is written to /tmp/
-
-.SH CONFIGURATION IN INITRAMFS
+.B /etc/dracut.conf
+.SS "Configuration in the Initramfs"
 .TP 
 .B /conf/conf.d/
 Any files found in /conf/conf.d/ will be sourced in the initramfs to 
@@ -373,14 +406,6 @@ set in the configuration files.
 .B /etc/cmdline
 Can contain additional command line options.
 
-.SH FILES
-.TP
-.B /var/log/dracut.log
-.TP
-.B /tmp/dracut.log
-.TP
-.B /etc/dracut.conf
-
 .SH AUTHORS
 .nf
 Harald Hoyer <harald@redhat.com>
diff --git a/dracut.conf.5 b/dracut.conf.5
index 1b7b33d..30bf16f 100644
--- a/dracut.conf.5
+++ b/dracut.conf.5
@@ -12,53 +12,53 @@ Command line parameter will overwrite any values set here.
 
 .SH OPTIONS
 .TP
-.BR dracutmodules="[LIST]"
+.BR dracutmodules= \%"[LIST]"
 Specify a space-separated list of dracut modules to
 call when building the initramfs. Modules are located
 in /usr/share/dracut/modules.d.
 .TP
-.BR omit_dracutmodules="[LIST]"
+.BR omit_dracutmodules= \%"[LIST]"
 Omit a space-separated list of dracut modules.
 .TP
-.BR add_dracutmodules="[LIST]"
+.BR add_dracutmodules= \%"[LIST]"
 Add a space-separated list of dracut modules.
 .TP
-.BR drivers="[LIST]"
+.BR drivers= \%"[LIST]"
 Specify a space-separated list of kernel modules to
 exclusively include in the initramfs.
 .TP
-.BR add_drivers="[LIST]"
+.BR add_drivers= \%"[LIST]"
 Specify a space-separated list of kernel 
 modules to add to the initramfs.
 .TP
-.BR filesystems="[LIST]"
+.BR filesystems= \%"[LIST]"
 Specify a space-separated list of kernel filesystem
 modules to exclusively include in the generic
 initramfs.
 .TP
-.BR drivers_dir="<dir>"
+.BR drivers_dir= \%"<dir>"
 Specify the directory, where to look for kernel modules
 .TP
-.BR fw_dir="<dir>[:<dir> ...]"
+.BR fw_dir= \%"<dir>[:<dir>\ ...]"
 Specify additional directories, where to look for firmwares, separated by :
 .TP
-.BR do_strip="yes|no"
+.BR do_strip= \%"yes|no"
 Strip binaries in the initramfs (default=yes)
 .TP
-.BR hostonly="yes|no"
+.BR hostonly= \%"yes|no"
 Host-Only mode: Install only what is needed for booting 
 the local host instead of a generic host.
 .TP
-.BR mdadmconf="yes|no"
+.BR mdadmconf= \%"yes|no"
 Include local /etc/mdadm.conf (default=yes)
 .TP
-.BR lvmconf="yes|no"
+.BR lvmconf= \%"yes|no"
 Include local /etc/lvm/lvm.conf (default=yes)
 .TP
-.BR kernel_only="yes|no" 
+.BR kernel_only= "yes|no" 
 Only install kernel drivers and firmware files. (default=no)
 .TP
-.BR no_kernel="yes|no"
+.BR no_kernel= \%"yes|no"
 Do not install kernel drivers and firmware files (default=no)
 
 .SH SEE ALSO
-- 
1.6.6

